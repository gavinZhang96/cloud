/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2019-05-21 08:49:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.DoPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.huatai.dao.UserDao;
import com.huatai.dao.BlackUserDao;
import com.huatai.dao.impl.BlackUserDaoImpl;
import com.huatai.util.CommonUtils;
import com.huatai.dao.impl.UserDaoImpl;
import com.huatai.entity.*;
import com.huatai.biz.UserBiz;
import com.huatai.biz.impl.UserBizImpl;
import java.util.*;

public final class do_005findexregister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.huatai.entity");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.huatai.dao.BlackUserDao");
    _jspx_imports_classes.add("com.huatai.biz.impl.UserBizImpl");
    _jspx_imports_classes.add("com.huatai.dao.impl.BlackUserDaoImpl");
    _jspx_imports_classes.add("com.huatai.util.CommonUtils");
    _jspx_imports_classes.add("com.huatai.dao.UserDao");
    _jspx_imports_classes.add("com.huatai.dao.impl.UserDaoImpl");
    _jspx_imports_classes.add("com.huatai.biz.UserBiz");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	//用户注册,即往Tb_user_info表里面插入信息
	UserDao newsDao = new UserDaoImpl();

	//从前台页面获得企业名称或者个人所输入的信息
	//通过工具类自动获取全球唯一的id
	String userid = CommonUtils.getUUid();

	//获得企业名称或个人用户名
	String reusername = request.getParameter("reusername");

	//System.out.println("1reusername是" + reusername);

	//获得企业名称或个人用户名查询新注册用户是否已经入黑名单
	BlackUserDao blackruse = new BlackUserDaoImpl();
	BlackUserInfo bu = blackruse.isExit(reusername);
	if (bu != null) {
		//进入黑名单
		if (reusername.equals(bu.getAccount())) {
			request.setAttribute("indexregmsg", "权限受限，禁止注册！");
		}
	} else {
		//System.out.println("没有进入黑名单");
		//没有进入黑名单		
		//判断是否已经注册
		UserBiz userbiz = new UserBizImpl();
		UserInfo isexit = userbiz.getIsExit(reusername);
		if (isexit != null) {
			if (reusername.equals(isexit.getAccount())) {
				//System.out.println("dan已经注册");
				request.setAttribute("indexregmsg", "已有该用户！");
				//request.getRequestDispatcher("../index.jsp").forward(request, response);
			}
		} else {
			//System.out.println("没有 注册");
			//没有注册
			//密码
			String repassword = request.getParameter("repassword");
			//System.out.println("3reusername是" + repassword);
			//再次确认密码
			String repassword1 = request.getParameter("repassword1");
			if (repassword.equals(repassword1)) {

				//身份   --1代表管理员；2代表企业用户；3代表求职者
				String roottemp = request.getParameter("reworkor");
				//System.out.println("root是"+roottemp);
				int root = 2;//--1代表管理员；2代表企业用户；3代表求职者
				if ("企业用户".equals(roottemp)) {
					root = 2;
				} else if ("求职用户".equals(roottemp)) {
					root = 3;
				}
				//构建录入用户的实例
				UserInfo user = new UserInfo(userid, reusername, repassword, root);
				boolean isSuccess = newsDao.insertNews(user);
				if (isSuccess) {
					request.setAttribute("indexregmsg", "注册成功！");
				} else {
					//response.getWriter().println("<script type='text/javascript'>alert('注册失败！请重新输入');</script>");
					request.setAttribute("indexregmsg", "该用户已经存在！");
				}
			} else {
				//两次输入的密码不同
				request.setAttribute("indexregmsg", "两次输入的密码不同！");
			}

		}

	}
	//response.sendRedirect("../index.jsp");
	request.getRequestDispatcher("../index.jsp").forward(request, response);

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
